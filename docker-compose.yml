version: '2.19.1'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: 'root'
      MONGO_INITDB_ROOT_PASSWORD: 'example'
      MONGO_INITDB_DATABASE: cvizard

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  
  pdfreader: 
    build: ./backend/pdfReader
    command:  uvicorn main:app --reload --workers 1 --host 0.0.0.0 --port 8000
    volumes:
      - ./backend/pdfReader:/app
    ports:
      - 8000:8000
    depends_on:
      - kafka
      - zookeeper
    environment:
      - PDF_TEXT_TOPIC=pdf-text
      - BOOTSTRAP_SERVERS=kafka:29092

  textcleaner: 
    build: ./backend/textCleaner
    command:  python3 main.py
    volumes:
      - ./backend/textCleaner:/app
    ports:
      - 8001:8000
    depends_on:
      - kafka
      - zookeeper
    environment:
        - PDF_TEXT_TOPIC=pdf-text
        - CLEANED_TEXT_TOPIC=cleaned-text
        - BOOTSTRAP_SERVERS=kafka:29092

  # frontend:
  #   build:
  #     context: ./frontend/cvizard
  #     dockerfile: Dockerfile.dev
  #   ports:
  #     - '5173:5173'
  #   depends_on:
  #     - kafka
  #   container_name: frontend


  frontend-prod:
    build:
      context: ./frontend/cvizard
      dockerfile: Dockerfile.prod
    ports:
      - 5173:5173
    depends_on:
      - kafka
    container_name: frontend-prod

  apigateway:
    build: 
      context: ./backend/apigateway
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    container_name: apigateway

  pdfcreator:
    build:
      context: ./backend/pdfcreator
      dockerfile: Dockerfile
    ports:
      - '8084:8084'
    depends_on:
      - kafka
    container_name: pdfcreator
  
  converter:
    build:
      context: ./backend/converter
      dockerfile: Dockerfile
    ports:
      - '8083:8083'
    depends_on:
      - kafka
    container_name: converter